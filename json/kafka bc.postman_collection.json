{
	"info": {
		"_postman_id": "425660a1-6fc7-424f-95f2-6f7e0991c43d",
		"name": "kafka bc",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "2723469"
	},
	"item": [
		{
			"name": "new message",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": \"3363\",\r\n    \"timestamp\": \"2024-12-23T11:19:32Z\",\r\n    \"message\": \"Este es un mensaje de prueba\",\r\n    \"metadata\": {\r\n        \"source\": \"app1\",\r\n        \"type\": \"notification\"\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/v1/queues",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v1",
						"queues"
					]
				}
			},
			"response": []
		},
		{
			"name": "new message error",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": \"ddd333\",\r\n    \"timestamp\": \"2024-12-23T11:19:32Z\",\r\n    \"message\": \"Este es un mensaje de prueba\",\r\n    \"metadata\": {\r\n        \"source\": \"app1\",\r\n        \"type\": \"notification\"\r\n    },\r\n    \"titulo\": \"ddd\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/v1/queues",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v1",
						"queues"
					]
				}
			},
			"response": []
		},
		{
			"name": "get message by id",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": \"123455\",\r\n    \"timestamp\": \"2024-12-23T11:19:32Z\",\r\n    \"message\": \"Este es un mensaje de prueba\",\r\n    \"metadata\": {\r\n        \"source\": \"app1\",\r\n        \"type\": \"notification\"\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/v1/queues/29117dc2-5f08-455a-a7e6-d65a6b352785",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v1",
						"queues",
						"29117dc2-5f08-455a-a7e6-d65a6b352785"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete message by id",
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": \"123455\",\r\n    \"timestamp\": \"2024-12-23T11:19:32Z\",\r\n    \"message\": \"Este es un mensaje de prueba\",\r\n    \"metadata\": {\r\n        \"source\": \"app1\",\r\n        \"type\": \"notification\"\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/v1/queues/29117dc2-5f08-455a-a7e6-d65a6b352785",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v1",
						"queues",
						"29117dc2-5f08-455a-a7e6-d65a6b352785"
					]
				}
			},
			"response": []
		},
		{
			"name": "obtener todos los mensajes de la cola",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var template = `\r",
							"<style type=\"text/css\">\r",
							"    .tftable {font-size:14px;color:#333333;width:100%;border-width: 1px;border-color: #87ceeb;border-collapse: collapse;}\r",
							"    .tftable th {font-size:18px;background-color:#87ceeb;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;text-align:left;}\r",
							"    .tftable tr {background-color:#ffffff;}\r",
							"    .tftable td {font-size:14px;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;}\r",
							"    .tftable tr:hover {background-color:#e0ffff;}\r",
							"</style>\r",
							"\r",
							"<table class=\"tftable\" border=\"1\">\r",
							"    <tr>\r",
							"        <th>ID</th>\r",
							"        <th>Message</th>\r",
							"        <th>Timestamp</th>\r",
							"        <th>Source</th>\r",
							"        <th>Type</th>\r",
							"    </tr>\r",
							"    \r",
							"    {{#each response}}\r",
							"        <tr>\r",
							"            <td>{{id}}</td>\r",
							"            <td>{{message}}</td>\r",
							"            <td>{{timestamp}}</td>\r",
							"            <td>{{metadata.source}}</td>\r",
							"            <td>{{metadata.type}}</td>\r",
							"        </tr>\r",
							"    {{/each}}\r",
							"</table>\r",
							"`;\r",
							"\r",
							"function constructVisualizerPayload() {\r",
							"    return {response: pm.response.json()}\r",
							"}\r",
							"\r",
							"pm.visualizer.set(template, constructVisualizerPayload());"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": \"123455\",\r\n    \"timestamp\": \"2024-12-23T11:19:32Z\",\r\n    \"message\": \"Este es un mensaje de prueba\",\r\n    \"metadata\": {\r\n        \"source\": \"app1\",\r\n        \"type\": \"notification\"\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/v1/queues/all",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v1",
						"queues",
						"all"
					]
				}
			},
			"response": []
		},
		{
			"name": "health",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"id\": \"12345\",\r\n\"timestamp\": \"2024-12-23T11:19:32Z\",\r\n\"message\": \"Este es un mensaje de prueba\",\r\n\"metadata\": {\r\n\"source\": \"app1\",\r\n\"type\": \"notification\"\r\n}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/v1/queues/health",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v1",
						"queues",
						"health"
					]
				}
			},
			"response": []
		}
	]
}